@inject HttpClient Http
<table class="table table-success table-striped">
    <thead>
        <tr>
            <th scope="col">Nombre</th>
            <th scope="col">Descripcion</th>
            <th scope="col">Editar</th>
            <th scope="col">Eliminar</th>
            <th scope="col">Rangos</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var i in Termometros)
        {
            <tr>
                <td>@i.Nombre</td>
                <td>@i.Descripcion</td>
                <td>
                    <button type="button" class="btn btn-primary">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                </td>
                <td>
                    <button type="button" class="btn btn-warning">
                        <i class="bi bi-trash3-fill"></i>
                    </button>
                </td>
                <td>
                    <button type="button" class="btn btn-secondary">
                        <i class="bi bi-file-ruled-fill"></i>
                    </button>

                </td>
            </tr>
        }

    </tbody>
</table>

@code {
    public static List<Termometro> Termometros = new List<Termometro>();

    async Task ActualizarDatos()
    {
        var resultado = await Http.GetFromJsonAsync<List<Termometro>>("api/Termometro");
        if (resultado != null)
            Termometros = resultado;
    }

    protected override async Task OnInitializedAsync()
    {

        await ActualizarDatos();
    }
}
